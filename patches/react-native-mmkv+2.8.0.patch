diff --git a/node_modules/react-native-mmkv/README.md b/node_modules/react-native-mmkv/README.md
index 2affc34..70f8f62 100644
--- a/node_modules/react-native-mmkv/README.md
+++ b/node_modules/react-native-mmkv/README.md
@@ -115,6 +115,7 @@ The following values can be configured:
 * `id`: The MMKV instance's ID. If you want to use multiple instances, use different IDs. For example, you can separate the global app's storage and a logged-in user's storage. (required if `path` or `encryptionKey` fields are specified, otherwise defaults to: `'mmkv.default'`)
 * `path`: The MMKV instance's root path. By default, MMKV stores file inside `$(Documents)/mmkv/`. You can customize MMKV's root directory on MMKV initialization (documentation: [iOS](https://github.com/Tencent/MMKV/wiki/iOS_advance#customize-location) / [Android](https://github.com/Tencent/MMKV/wiki/android_advance#customize-location))
 * `encryptionKey`: The MMKV instance's encryption/decryption key. By default, MMKV stores all key-values in plain text on file, relying on iOS's/Android's sandbox to make sure the file is encrypted. Should you worry about information leaking, you can choose to encrypt MMKV. (documentation: [iOS](https://github.com/Tencent/MMKV/wiki/iOS_advance#encryption) / [Android](https://github.com/Tencent/MMKV/wiki/android_advance#encryption))
+* `appGroup`: The MMKV instance's app group name (iOS only). It is used to share MMKV instances between apps and extensions within the same app group. (documentation: [iOS](https://github.com/Tencent/MMKV/wiki/iOS_tutorial#configuration))
 
 ### Set
 
diff --git a/node_modules/react-native-mmkv/ios/MmkvHostObject.mm b/node_modules/react-native-mmkv/ios/MmkvHostObject.mm
index 60cebf9..4908ae2 100644
--- a/node_modules/react-native-mmkv/ios/MmkvHostObject.mm
+++ b/node_modules/react-native-mmkv/ios/MmkvHostObject.mm
@@ -15,7 +15,14 @@
 MmkvHostObject::MmkvHostObject(NSString* instanceId, NSString* path, NSString* cryptKey)
 {
   NSData* cryptData = cryptKey == nil ? nil : [cryptKey dataUsingEncoding:NSUTF8StringEncoding];
-  instance = [MMKV mmkvWithID:instanceId cryptKey:cryptData rootPath:path];
+
+  // Get appGroup value from info.plist using key "AppGroup"
+  NSString *appGroup = [[NSBundle mainBundle] objectForInfoDictionaryKey:@"AppGroup"];
+  if (appGroup != nil) {
+    instance = [MMKV mmkvWithID:instanceId cryptKey:cryptData mode:MMKVMultiProcess];
+  } else {
+    instance = [MMKV mmkvWithID:instanceId cryptKey:cryptData rootPath:path];
+  }
 
   if (instance == nil) {
     // Check if instanceId is invalid
@@ -28,11 +35,13 @@
       throw std::runtime_error("Failed to create MMKV instance! `encryptionKey` cannot be longer than 16 bytes!");
     }
 
-    // Check if path is invalid
-    NSFileManager* fileManager = [[NSFileManager alloc] init];
-    bool pathExists = [fileManager fileExistsAtPath:path isDirectory:nil];
-    if (!pathExists) {
-      throw std::runtime_error("Failed to create MMKV instance! The given Storage Path does not exist!");
+    if (appGroup == nil) {
+      // Check if path is invalid
+      NSFileManager* fileManager = [[NSFileManager alloc] init];
+      bool pathExists = [fileManager fileExistsAtPath:path isDirectory:nil];
+      if (!pathExists) {
+        throw std::runtime_error("Failed to create MMKV instance! The given Storage Path does not exist!");
+      }
     }
 
     throw std::runtime_error("Failed to create MMKV instance!");
diff --git a/node_modules/react-native-mmkv/ios/MmkvModule.mm b/node_modules/react-native-mmkv/ios/MmkvModule.mm
index cffcf29..601a76a 100644
--- a/node_modules/react-native-mmkv/ios/MmkvModule.mm
+++ b/node_modules/react-native-mmkv/ios/MmkvModule.mm
@@ -42,7 +42,14 @@ + (NSString*)getPropertyAsStringOrNilFromObject:(jsi::Object&)object
     auto& runtime = *jsiRuntime;
 
     RCTUnsafeExecuteOnMainQueueSync(^{
-      [MMKV initializeMMKV:storageDirectory];
+      // Get appGroup value from info.plist using key "AppGroup"
+      NSString *appGroup = [[NSBundle mainBundle] objectForInfoDictionaryKey:@"AppGroup"];
+      if (appGroup == nil) {
+          [MMKV initializeMMKV:storageDirectory];
+      } else {
+          NSString *groupDir = [[NSFileManager defaultManager] containerURLForSecurityApplicationGroupIdentifier:appGroup].path;
+          [MMKV initializeMMKV:nil groupDir:groupDir logLevel:MMKVLogNone];
+      }
     });
 
     // MMKV.createNewInstance()
